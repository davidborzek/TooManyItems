// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Selection renders correctly with full props and opened 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
          "flex": 1,
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": "50%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          >
            Some title
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </View>
        <RCTScrollView>
          <View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "borderBottomColor": "#e1e1e1",
                    "borderBottomWidth": 1,
                    "padding": 16,
                  }
                }
              >
                Some label
              </Text>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 10,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#86939e",
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        Some label
      </Text>
      <View
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomWidth": 1,
            "borderColor": "#86939e",
            "flexDirection": "row",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <TextInput
          autoCompleteType=""
          editable={false}
          enablesReturnKeyAutomatically={true}
          placeholder="Some placeholder"
          placeholderTextColor="#86939e"
          style={
            Object {
              "color": "#242424",
              "flex": 1,
              "fontSize": 18,
              "minHeight": 40,
            }
          }
          testID="RNE__Input__text-input"
          underlineColorAndroid="transparent"
        />
      </View>
      <Text
        style={
          Object {
            "color": "#ff190c",
            "fontSize": 12,
            "margin": 5,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Selection renders correctly with required props, no items and closed 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
          "flex": 1,
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": "50%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </View>
        <RCTScrollView>
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 10,
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomWidth": 1,
            "borderColor": "#86939e",
            "flexDirection": "row",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <TextInput
          autoCompleteType=""
          editable={false}
          enablesReturnKeyAutomatically={true}
          placeholderTextColor="#86939e"
          style={
            Object {
              "color": "#242424",
              "flex": 1,
              "fontSize": 18,
              "minHeight": 40,
            }
          }
          testID="RNE__Input__text-input"
          underlineColorAndroid="transparent"
        />
      </View>
      <Text
        style={
          Object {
            "color": "#ff190c",
            "fontSize": 12,
            "margin": 5,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Selection renders correctly with required props, with items and closed 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
          "flex": 1,
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": "50%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </View>
        <RCTScrollView>
          <View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "borderBottomColor": "#e1e1e1",
                    "borderBottomWidth": 1,
                    "padding": 16,
                  }
                }
              >
                Some label
              </Text>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 10,
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomWidth": 1,
            "borderColor": "#86939e",
            "flexDirection": "row",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <TextInput
          autoCompleteType=""
          editable={false}
          enablesReturnKeyAutomatically={true}
          placeholderTextColor="#86939e"
          style={
            Object {
              "color": "#242424",
              "flex": 1,
              "fontSize": 18,
              "minHeight": 40,
            }
          }
          testID="RNE__Input__text-input"
          underlineColorAndroid="transparent"
        />
      </View>
      <Text
        style={
          Object {
            "color": "#ff190c",
            "fontSize": 12,
            "margin": 5,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Selection renders correctly with required props, with items and opened 1`] = `
<View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    statusBarTranslucent={true}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.5)",
          "flex": 1,
          "justifyContent": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "backgroundColor": "white",
            "height": "50%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "fontWeight": "600",
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text />
          </View>
        </View>
        <RCTScrollView>
          <View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "borderBottomColor": "#e1e1e1",
                    "borderBottomWidth": 1,
                    "padding": 16,
                  }
                }
              >
                Some label
              </Text>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 10,
          "width": "100%",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "borderBottomWidth": 1,
            "borderColor": "#86939e",
            "flexDirection": "row",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <TextInput
          autoCompleteType=""
          editable={false}
          enablesReturnKeyAutomatically={true}
          placeholderTextColor="#86939e"
          style={
            Object {
              "color": "#242424",
              "flex": 1,
              "fontSize": 18,
              "minHeight": 40,
            }
          }
          testID="RNE__Input__text-input"
          underlineColorAndroid="transparent"
        />
      </View>
      <Text
        style={
          Object {
            "color": "#ff190c",
            "fontSize": 12,
            "margin": 5,
          }
        }
      />
    </View>
  </View>
</View>
`;
